16th Sep 2025
=============

-> Nested Conditionals : Conditionals inside Conditionals
-> Nested Loops : Loops inside Loops

-> Branching Statements (Jump Statements) 

    -> break : helps you exit loops 

    -> continue : helps you skip the current Iteration in loop 

    -> pass : acts as a Placeholder, for doing nothing 

17th Sep 2025
=============

    -> Strings 

        -> One of the most widely used data type in python

        -> String : Sequence of characters enclosed in 'text' or "text" -> recommended
                    triple quotes -> not recommended for single line strings 
                    triple quotes -> recommended for multi line strings 
        
        -> When you need single quote in a string, enclose them in ""

        -> When you need double quote in a string, enclose them in ''

        -> When you need both single and double quote in a string, enclose them in '''

    -> Indexing : Python allows you to access individual characters inside string using index number

    -> text = "python"

        0  1  2  3  4  5 (Positive Indexing) (forward)
        p  y  t  h  o  n
       -6 -5 -4 -3 -2 -1 (Negative Indexing) (backward)

    -> len() : used to get length of string 

    -> Slicing : Extracting a portion of string from another string (substring), we use index numbers 

               : range(start, stop, step)
               : slice[start: stop: step]
            
                    start : from zero included 
                    stop : at end excluded
                    step : is 1 by default  
    
    -> Positive Slicing

    -> Negative Slicing

        print(text[::-1]) 
        Start = default → end of string ("n")
        Stop = default → beginning ("P")
        Step = -1 (reverse direction)


18th Sep 2025
=============

    -> Student Grade Tracker Solution

    -> String Formatting

    -> String Concatenation

    -> String Repetition

    -> String Immutability 

    -> String Methods 

        -> String class(datatype) provides various methods 

19th Sep 2025
=============

    -> String Methods Continued 

    -> App Req On Strings

20th Sep 2025
=============

    -> Simple Data types 

        -> Can hold one value 

        -> data = 10

    -> Complex Data types

        -> Can hold multiple values 

        -> data = [10,20,30,40,50]

    -> In python(part of standard library) we use following classes to work with Complex Data types

        -> List 
        -> Tuple 
        -> Dictionary
        -> Set 

    -> List 

        -> List is a data structure which allows you to Store multiple values in a single variable

        -> Lists are represented using [ ] or use list class ==> list()

        -> Accessing the data in lists 

            -> Like in Strings, we have index which starts from 0 

            -> Use index number to access individual elements

            -> Both Positive and Negative Indexing 

            -> Indexing is same as Strings

            -> Slicing is same as Strings 

                 slice[start: stop: step]
            
                    start : from zero included 
                    stop : at end excluded
                    step : is 1 by default  

        -> Looping 

        -> Operators 

        -> Conditionals 

        -> Duplicates Allowed 

        -> List Methods / operations

            -> 